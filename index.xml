<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sequentially randomized notes</title>
    <link>https://sequentiallyrandomizednotes.com/</link>
    <description>Recent content on sequentially randomized notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 21 Jul 2018 23:42:05 +0900</lastBuildDate>
    
	<atom:link href="https://sequentiallyrandomizednotes.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>James Blake - Don&#39;t Miss It</title>
      <link>https://sequentiallyrandomizednotes.com/post/180722_dontmissit/</link>
      <pubDate>Sat, 21 Jul 2018 23:42:05 +0900</pubDate>
      
      <guid>https://sequentiallyrandomizednotes.com/post/180722_dontmissit/</guid>
      <description>James Blakeが5月に公開した「Don&amp;rsquo;t Miss It」を結構聴いている。
どこか物悲しくてどこか荘厳で繊細な曲で、まさにJames Blakeといった趣。
   歌詞について書かれている興味深いページがあった。
 James Blakeはこの曲で、そうした隘路に迷い込まないための忠告をあなたに与える。弱さに押し流されそうになるのに耐えて、生活のふとした瞬間にあらわれる満ち足りたモーメントに注意を払うこと。
世界を背負わないこと――James Blake - Don&amp;rsquo;t Miss It
 そういえば、The Beatles - Strawberry Fields Forever でも同じような歌詞があったっけ。 なんてことをなぜ考えたかというと最近になって少しだけ観た「LOST」のせい。(以前に全シーズン観たのだけど。)
ドラマの中でだけなのか分からないけれど、英俳優のDominic Monaghanの左腕にその一節が彫ってあったから。
 Living is easy with eyes closed, Misunderstanding all you see.
 以上、James Blake・LOST・The Beatles周りのふと思った話でした。</description>
    </item>
    
    <item>
      <title>テーマをカスタマイズしました</title>
      <link>https://sequentiallyrandomizednotes.com/post/180718_update/</link>
      <pubDate>Wed, 18 Jul 2018 15:32:42 +0900</pubDate>
      
      <guid>https://sequentiallyrandomizednotes.com/post/180718_update/</guid>
      <description>やっとテーマのカスタマイズを完了。
ブレークポイントを3つ程設けて好みの文字サイズを設定しました。 いや、そのつもりだったのですがまだ納得できない点がいっぱい。 各ページのマージン(特に見出しの箇所など。)が読みにくいので、 そこは後に修正します。
また色々と苦労しながらも、Hugo関連ファイルをGitのSubmodule機能を使用した管理方法へ移行しました。 (実は移行の為にレポジトリを1度消去してしまった。。) 手順に関しては忘れない様に後々に記事を書きたいと思ってます。
(現在までアップした記事も書き直してアップしたい。。。)</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://sequentiallyrandomizednotes.com/page/about/</link>
      <pubDate>Fri, 13 Jul 2018 20:23:44 +0900</pubDate>
      
      <guid>https://sequentiallyrandomizednotes.com/page/about/</guid>
      <description>Comming Soon&amp;hellip;.</description>
    </item>
    
    <item>
      <title>node.jsをバージョン管理 (ndenv使用)</title>
      <link>https://sequentiallyrandomizednotes.com/post/180617_install_ndenv/</link>
      <pubDate>Sun, 17 Jun 2018 03:46:36 +0900</pubDate>
      
      <guid>https://sequentiallyrandomizednotes.com/post/180617_install_ndenv/</guid>
      <description>nodebrewを使ってnode,jsを管理していましたが、
案件毎にコマンド打つのも面倒に。。
それに案件で使用しているバージョンを確認するのも大変でした。
なんてことを考えていたら、ndenvというツールがあることを知りました。
ディレクトリ毎(案件毎)にバージョンを自動的に変更してくれるスグレモノでした。
1. 前準備 (nodebrew削除) 1.1. 既存環境確認 念のため、削除前に既存環境で使用していたnodeを確認しました。
(必要？)
$ nodebrew ls v5.12.0 v6.10.3 v7.9.0 v8.2.1 v8.8.1 v9.2.0 v9.5.0  1.2. 環境変数削除 vi ~/.bashrc  下記を削除
export PATH=$HOME/.nodebrew/current/bin:$PATH:  1.3. nodebrew削除 ホームディレクトリ配下にある.nodebrewを削除。
1.4. nodebrew削除確認 $ nodebrew -v -bash: /Users/&amp;lt;ユーザー&amp;gt;/.nodebrew/current/bin/nodebrew: No such file or directory  2. ndenv導入 2.1. インストール homebrew経由でndenvをインストールします。
$ brew install ndenv  2.2. 環境変数追記 ~/.bashrc(もしくは~/.bash_profile)を修正し、 環境変数を設定します。
vi ~/.bashrc  追記内容は下記
export PATH=&amp;quot;$HOME/.ndenv/bin:$PATH&amp;quot; eval &amp;quot;$(ndenv init -)&amp;quot;  変更内容を適用させます。</description>
    </item>
    
    <item>
      <title>node.jsをバージョン管理 (nodebrew使用)</title>
      <link>https://sequentiallyrandomizednotes.com/post/install_nodebrew/</link>
      <pubDate>Sun, 17 Jun 2018 03:40:35 +0900</pubDate>
      
      <guid>https://sequentiallyrandomizednotes.com/post/install_nodebrew/</guid>
      <description>プロジェクト毎にnode.jsのバージョンが違う場合があります。
切り替えが簡単にできれば。。。
そのような時にはnodebrewを使えば簡単にバージョン管理ができます。
1. 前準備 1.1. node.js 削除 もしnode.jsがインストールされている場合、下記のコマンドで削除をします。
なお、ターミナル上で一行づつコピー&amp;amp;ペーストをして実行。
lsbom -f -l -s -pf /var/db/receipts/org.nodejs.node.pkg.bom \ | while read i; do sudo rm /usr/local/${i} done sudo rm -rf /usr/local/lib/node \ /usr/local/lib/node_modules \ /var/db/receipts/org.nodejs.*  - 参考にさせていただきました -
・MacにpkgでインストールしたNode.jsをアンインストールする手順
2. nodebrew導入 2.1. インストール homebrewは使用せずにインストールします。
コマンドはnodebrewのgitページの通り。
$ curl -L git.io/nodebrew | perl - setup  2.2. 環境変数設定 インストール完了時に表示された記述を参考に環境変数を設定します。
Installed nodebrew in $HOME/.nodebrew ======================================== Export a path to nodebrew: export PATH=$HOME/.nodebrew/current/bin:$PATH ========================================  ファイルは、~/.</description>
    </item>
    
    <item>
      <title>Hugo と GitHub Pagesでサイトを作成</title>
      <link>https://sequentiallyrandomizednotes.com/post/myfirstentry/</link>
      <pubDate>Fri, 15 Jun 2018 13:56:05 +0900</pubDate>
      
      <guid>https://sequentiallyrandomizednotes.com/post/myfirstentry/</guid>
      <description>「アウトプットとインプットが圧倒的に足りない」
「 備忘録的なものをアップしたい」
と、日頃から思いつつも何もできていなかった為、
瞬発的にページを作成しました。
Wordpressで作成するつもりだったけれども、
 普段からMarkdownで作業メモ等を作成している WordpressファイルをGithub管理したいと思っていた (Githubに興味があった。) Wordpressからの作成だとまとまった時間が必要かも 好奇心   などを理由に、Hugoでサイトを製作して
GitHub Pages でホスティングすることにしました。
サイト製作にあたって考えたことは以下。
1. 一旦、テーマは配布のものを使用する
2. コメント欄を導入する
3. ドメイン取得をする
4. HTTPS化も行う
1については、ゆくゆくはテーマの自作を目標に！
3に関しては、タイミングの良いことにGitHubが公式にカスタムドメインのHTTPS配信をサポートしていたので、 利用させていただきました。
以上、まだHugoについても全然分かっていないので学習していければ良いです。</description>
    </item>
    
  </channel>
</rss>